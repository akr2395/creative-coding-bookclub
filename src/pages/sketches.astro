---
import SketchListerPage from '../layouts/SketchListerPage.astro';
import { DOMAIN } from '../constants.js';
import { getMemberPagesRoutes } from '../utils/index.js';
const routes = getMemberPagesRoutes();

const sketches = routes.filter(
  (p) =>
    p.props.metadata.tags?.includes('sketch') && p.params.alias !== '_example'
);
---

<SketchListerPage>
  <section class='lg:h-full'>
    <div class='flex lg:h-full max-lg:flex-col'>
      <div class='m-8 flex flex-col'>
        <h2 class='mb-4'>sketches</h2>
        <ul id='sketch-lister' class='space-y-2 flex-1'>
          {
            sketches.map((sketch) => (
              <li>
                <button>
                  {sketch.params.alias + '/' + sketch.params.page}
                </button>
              </li>
            ))
          }
        </ul>
        <a href="/" class="lg:mb-4 mt-4 max-w-max">Back</a>
      </div>
      <div class='m-8 flex-1 shadow-2xl rounded-2xl flex flex-col'>
        <iframe
          id='sketch-viewport'
          src='/_example/loading'
          class='flex-1 rounded-t-2xl max-lg:min-h-svw'></iframe>
        <div class='p-4 border-t-3 border-neutral-400 border-dashed'>
          <p id='sketch-title'>...</p>
          <p id='sketch-description'>...</p>
          <a id='sketch-link' href='/_example/loading' target='_blank'
            >open</a
          >
        </div>
      </div>
    </div>
    <script define:vars={{ sketches }} is:inline>
      const sketchListerEl = document.getElementById('sketch-lister');
      const sketchViewportEl = document.getElementById('sketch-viewport');
      const sketchTitleEl = document.getElementById('sketch-title');
      const sketchDescriptionEl = document.getElementById('sketch-description');
      const sketchLinkEl = document.getElementById('sketch-link');
      const sketchButtons = sketchListerEl.querySelectorAll('button');

      function loadSketch(s) {
        const url = `/${s.params.alias}/${s.params.page}`;
        sketchViewportEl.setAttribute('src', url);
        sketchTitleEl.innerHTML = s.props?.metadata?.title;
        sketchDescriptionEl.innerHTML = s.props?.metadata?.description;
        sketchLinkEl.setAttribute('href', url);
      }

      for (let i = 0; i < sketchButtons.length; i++) {
        sketchButtons[i].addEventListener('click', () => {
          const s = sketches[i];
          loadSketch(s);
        });
      }

      const randomIndex = Math.floor(Math.random() * sketches.length);
      loadSketch(sketches[randomIndex])
    </script>
  </section>
</SketchListerPage>
